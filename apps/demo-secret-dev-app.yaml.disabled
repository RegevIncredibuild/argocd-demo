# ArgoCD Application for Demo Secret Development Environment
#
# This application demonstrates AWS Secrets Manager integration with Kubernetes
# using the AWS Secrets Store CSI Driver and Secret Provider Class
#
# To ENABLE:  rename file to demo-secret-dev-app.yaml
# To DISABLE: rename file to demo-secret-dev-app.yaml.disabled
# 
# This GitOps approach works because ArgoCD only processes .yaml/.yml files.
# Applications are defined in the 'apps'  directory (app of apps),
# will be deployed by ArgoCD under the 'argocd-apps' project

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: demo-secret-dev
  namespace: argocd  # ArgoCD control plane namespace
  finalizers:
    - resources-finalizer.argocd.argoproj.io  # Ensures proper cleanup of managed resources when app is deleted
spec:
  project: default  # ArgoCD project - 'default' allows deployment to any cluster/namespace
  
  # SOURCE: Where to find the Kubernetes manifests
  source:
    repoURL: https://github.com/RegevIncredibuild/argocd-demo.git
    targetRevision: HEAD  # Always deploy from latest commit on default branch
    path: demo-secret-dev  # Directory containing K8s manifests for this application
  
  # DESTINATION: Where to deploy the application resources
  destination:
    server: https://kubernetes.default.svc  # Deploy to same cluster as ArgoCD control plane
    namespace: demo-secret-dev-ns  # Target namespace for application resources
  
  # SYNC POLICY: How ArgoCD manages the application lifecycle
  syncPolicy:
    automated:
      prune: true      # Delete resources removed from Git (GitOps cleanup)
      selfHeal: true   # Auto-sync when cluster state drifts from Git state
    syncOptions:
      - CreateNamespace=true  # Create target namespace if it doesn't exist
      - Replace=true          # Use kubectl replace instead of apply for updates